<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chart on Codelibrary</title>
    <link>https://codelibrary.opendatasoft.com/tags/chart/</link>
    <description>Recent content in chart on Codelibrary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://codelibrary.opendatasoft.com/tags/chart/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chart samples</title>
      <link>https://codelibrary.opendatasoft.com/widget-tricks/charts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codelibrary.opendatasoft.com/widget-tricks/charts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Drill-down refine in charts</title>
      <link>https://codelibrary.opendatasoft.com/widget-tricks/drill-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codelibrary.opendatasoft.com/widget-tricks/drill-down/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ods-analysis, quick intro</title>
      <link>https://codelibrary.opendatasoft.com/widget-tricks/ods-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codelibrary.opendatasoft.com/widget-tricks/ods-analysis/</guid>
      <description>The technical documentation says :
This widget exposes the results of an analysis (as an object containing a results array and optionally an aggregations object) in a variable available in the scope. It can be used with AngularJS&amp;rsquo;s ngRepeat to simply build a table of analysis results.
Normal people would say :
Ods-analysis is the way to get the values behind a chart ! What you can do with a chart, you can do the same with ods-analysis.</description>
    </item>
    
  </channel>
</rss>
