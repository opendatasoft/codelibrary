{{/* Generates a valid Algolia search index */}}
{{- $hits := slice -}}
{{- $section := $.Site.GetPage "section" .Section }}
{{- $validVars := $.Param "algolia.vars" | default slice -}}
{{- $validParams := $.Param "algolia.params" | default slice -}}
{{- range $i, $hit := where (where .Site.Pages "Type" "in" (slice "apps" "widget-tricks" "components" "generators" "page-templates" "portal-themes" "custom-views")) "IsPage" true -}}
{{- $dot := . -}}
{{- if (and ($hit.IsDescendant $section) (and (not $hit.Draft) (not $hit.Params.private))) -}}
  {{/* Set the hit's objectID */}}
  {{- .Scratch.SetInMap $hit.File.Path "objectID" $hit.File.UniqueID -}}
  {{/* Store built-in page variables in iterable object */}}
  {{- .Scratch.SetInMap "temp" "content" $hit.Plain -}}
  {{- .Scratch.SetInMap "temp" "date" $hit.Date.UTC.Unix -}}
  {{- .Scratch.SetInMap "temp" "description" $hit.Description -}}
  {{- .Scratch.SetInMap "temp" "keywords" $hit.Keywords -}}
  {{- .Scratch.SetInMap "temp" "permalink" $hit.Permalink -}}
  {{- .Scratch.SetInMap "temp" "relpermalink" $hit.RelPermalink -}}
  {{- .Scratch.SetInMap "temp" "title" $hit.Title -}}
  {{- .Scratch.SetInMap "temp" "section" (humanize $hit.Section) -}}
  {{/* Include valid page vars */}}
  {{- range $key, $param := (.Scratch.Get "temp") -}}
    {{- if in $validVars $key -}}
      {{- $dot.Scratch.SetInMap $hit.File.Path $key $param -}}
    {{- end -}}
  {{- end -}}

  {{/* Include valid page params */}}
    {{- range $key, $param := $hit.Params -}}
      {{- if in $validParams $key -}}
        {{- $dot.Scratch.SetInMap $hit.File.Path $key $param -}}
      {{- end -}}
    {{- end -}}
    {{- $.Scratch.SetInMap "hits" $hit.File.Path (.Scratch.Get $hit.File.Path) -}}
  {{- end -}}
{{- end -}}
{{- jsonify ($.Scratch.GetSortedMapValues "hits") -}}
